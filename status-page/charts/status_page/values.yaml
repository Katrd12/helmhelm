# Default values for status_page.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    - host: dev-kuma.sevensystem.vn
      paths: 
        - path: /
          pathType: Prefix
          backend:
          service:
            name: status-kuma-status
            port: 
              number: 3001

    - host: dev-cachet.sevensystem.vn
      paths: 
        - path: /
          pathType: Prefix
          backend:
          service:
            name: status-incident-page
            port: 
              number: 8000

  tls: 
   - secretName: sevensystem-vn-2021
     hosts:
       - dev-kuma.sevensystem.vn
       - dev-cachet.sevensystem.vn

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

kuma:
  fullname: status-kuma-status
  labels: status-kuma-status
  container:
    size: "128Mi"
    CPU: "500m"
  image:
    repository: khoatd257/status_page
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.3"
  service:
    name: http
    type: ClusterIP
    port: "3001"
    # nodePort: "30301"
  volumes:
    name: kuma-ps
    labels: status-kuma-storage
    mountPath: /app/data
    volumeClaimName: kuma-pvc
    accessModes: ReadWriteOnce
  env:
    INCIDENTURL: 'https://dev-cachet.sevensystem.vn'
  pv: 
    name: status-kuma-pv
    size: 2Gi
    storageClass: data-storage
    annotations:
      helm.sh/resource-policy: "keep"
  

pv:
  storageClass: data-storage
  mode: Filesystem
  policy: Retain

cachet:
  fullname: status-incident-page
  labels: status-incident-page
  container:
    size: "128Mi"
    CPU: "500m"
  image:
    repository: khoatd257/cachet_cus
    pullPolicy: Always
    tag: "0.3"
  service:
    name: http
    type: ClusterIP
    port: "8000"
    # nodePort: "30800"
  env:
    DB_DRIVER: pgsql
    DB_HOST: status-postgresql
    DB_PORT: "5432"
    DB_DATABASE: cachetdb
    DB_USERNAME: postgres
    DB_PASSWORD: 'SE!#0090'
    DB_PREFIX: chq_
    APP_KEY: 'base64:8AOwPDH6oTOKk75ISTx8o7dOKBFjgfCDiXeaGSLl12c='
    APP_LOG: errorlog``
    APP_ENV: ${APP_ENV:-production}
    APP_DEBUG: false
    DEBUG: false
    DOCKER: 'true'

postgresql:
  enabled: true
  fullnameOverride: "status-postgresql"
  labels: "status-postgresql"
  postgresqlDatabase: "cachetdb"
  postgresqlUsername: "postgres"
  postgresqlPassword: 'SE!#0090'
  postgresqlPostgresPassword: 'SE!#0090'
  # storageClass: data-storage
  persistence:
    enabled: true
    existingClaim: "postgres-pvc"
    # selector: status-storage
    # storageClass: data-storage
    # size: 1Gi
    mountPath: '/bitnami/postgresql'
  pv:
    volumeClaimName: postgres-pvc
    labels: status-postgresql-storage
    name: status-postgresql-pv
    size: 2Gi
    storageClass: data-storage
    annotations:
      helm.sh/resource-policy: "keep"
  service:
    type: ClusterIP
    # type: NodePort
    port: "5432"
    # nodePort: "32432"

nodeSelector: {}

tolerations: []

affinity: {}
